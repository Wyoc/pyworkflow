[tool.poetry]
name = "workflow-generator"
version = "0.1.0"
description = "A flexible workflow orchestration library with parameter validation and checkpointing"
authors = ["Jean Dupuy jean.dupuy@protonmail.com"]
license = "MIT"
readme = "README.md"
packages = [{include = "workflow_generator"}]

[tool.poetry.dependencies]
python = "^3.8"
typing-extensions = "^4.5.0"  # For enhanced typing support
dataclasses = {version = "^0.8", python = "<3.7"}  # Only for Python 3.6
pathlib = {version = "^1.0.1", python = "<3.6"}  # Only for older Python versions

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.4.1"
pylint = "^2.17.5"
pre-commit = "^3.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
    "C0103",  # invalid-name
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=workflow_generator"
testpaths = ["tests"]